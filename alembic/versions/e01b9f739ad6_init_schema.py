"""init schema

Revision ID: e01b9f739ad6
Revises: 70545c685144
Create Date: 2025-10-01 21:20:03.887593

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e01b9f739ad6'
down_revision: Union[str, Sequence[str], None] = '70545c685144'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lot_material_use',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('raw_material_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Numeric(precision=18, scale=3), nullable=False),
    sa.Column('uom', sa.String(), nullable=True),
    sa.Column('used_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('used_by_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['raw_batches.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['production_lots.id'], ),
    sa.ForeignKeyConstraint(['raw_material_id'], ['raw_materials.id'], ),
    sa.ForeignKeyConstraint(['used_by_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_lmu_batch', 'lot_material_use', ['batch_id'], unique=False)
    op.create_index('ix_lmu_lot', 'lot_material_use', ['lot_id'], unique=False)
    op.create_index('ix_lmu_rm', 'lot_material_use', ['raw_material_id'], unique=False)
    op.create_index(op.f('ix_lot_material_use_batch_id'), 'lot_material_use', ['batch_id'], unique=False)
    op.create_index(op.f('ix_lot_material_use_lot_id'), 'lot_material_use', ['lot_id'], unique=False)
    op.create_index(op.f('ix_lot_material_use_raw_material_id'), 'lot_material_use', ['raw_material_id'], unique=False)
    op.add_column('part_materials', sa.Column('part_revision_id', sa.Integer(), nullable=True))
    op.add_column('part_materials', sa.Column('qty_per', sa.Numeric(precision=18, scale=3), nullable=True))
    op.add_column('part_materials', sa.Column('uom', sa.String(), nullable=True))
    op.alter_column('part_materials', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('uq_part_material_once'), 'part_materials', type_='unique')
    op.create_index(op.f('ix_part_materials_part_revision_id'), 'part_materials', ['part_revision_id'], unique=False)
    op.create_unique_constraint('uq_part_rev_material_once', 'part_materials', ['part_id', 'part_revision_id', 'raw_material_id'])
    op.create_foreign_key(None, 'part_materials', 'part_revisions', ['part_revision_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_lots_no', 'production_lots', ['lot_no'], unique=False)
    op.create_index('ix_lots_part', 'production_lots', ['part_id', 'part_revision_id'], unique=False)
    op.create_index('ix_lots_status', 'production_lots', ['status'], unique=False)
    op.add_column('raw_batches', sa.Column('po_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_raw_batches_material_po_line_id'), 'raw_batches', ['material_po_line_id'], unique=False)
    op.create_index('ix_raw_batches_po', 'raw_batches', ['po_id'], unique=False)
    op.create_index(op.f('ix_raw_batches_po_id'), 'raw_batches', ['po_id'], unique=False)
    op.create_index('ix_raw_batches_supplier', 'raw_batches', ['supplier_id'], unique=False)
    op.create_foreign_key(None, 'raw_batches', 'material_pos', ['po_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'raw_batches', type_='foreignkey')
    op.drop_index('ix_raw_batches_supplier', table_name='raw_batches')
    op.drop_index(op.f('ix_raw_batches_po_id'), table_name='raw_batches')
    op.drop_index('ix_raw_batches_po', table_name='raw_batches')
    op.drop_index(op.f('ix_raw_batches_material_po_line_id'), table_name='raw_batches')
    op.drop_column('raw_batches', 'po_id')
    op.drop_index('ix_lots_status', table_name='production_lots')
    op.drop_index('ix_lots_part', table_name='production_lots')
    op.drop_index('ix_lots_no', table_name='production_lots')
    op.drop_constraint(None, 'part_materials', type_='foreignkey')
    op.drop_constraint('uq_part_rev_material_once', 'part_materials', type_='unique')
    op.drop_index(op.f('ix_part_materials_part_revision_id'), table_name='part_materials')
    op.create_unique_constraint(op.f('uq_part_material_once'), 'part_materials', ['part_id', 'raw_material_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('part_materials', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('part_materials', 'uom')
    op.drop_column('part_materials', 'qty_per')
    op.drop_column('part_materials', 'part_revision_id')
    op.drop_index(op.f('ix_lot_material_use_raw_material_id'), table_name='lot_material_use')
    op.drop_index(op.f('ix_lot_material_use_lot_id'), table_name='lot_material_use')
    op.drop_index(op.f('ix_lot_material_use_batch_id'), table_name='lot_material_use')
    op.drop_index('ix_lmu_rm', table_name='lot_material_use')
    op.drop_index('ix_lmu_lot', table_name='lot_material_use')
    op.drop_index('ix_lmu_batch', table_name='lot_material_use')
    op.drop_table('lot_material_use')
    # ### end Alembic commands ###
