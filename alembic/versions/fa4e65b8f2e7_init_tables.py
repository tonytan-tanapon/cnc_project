"""init tables

Revision ID: fa4e65b8f2e7
Revises: 
Create Date: 2025-08-10 21:06:51.229335

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa4e65b8f2e7'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_products_product_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_process_steps_step_id'), table_name='process_steps')
    op.drop_table('process_steps')
    op.alter_column('customers', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('customers', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('employees', 'emp_code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('employees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('lot_material_use', 'qty',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=18, scale=3),
               existing_nullable=False)
    op.create_index('ix_lmu_batch', 'lot_material_use', ['batch_id'], unique=False)
    op.create_index('ix_lmu_lot', 'lot_material_use', ['lot_id'], unique=False)
    op.alter_column('purchase_orders', 'po_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('purchase_orders', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('raw_batches', sa.Column('supplier_id', sa.Integer(), nullable=True))
    op.add_column('raw_batches', sa.Column('supplier_batch_no', sa.String(), nullable=True))
    op.add_column('raw_batches', sa.Column('mill_name', sa.String(), nullable=True))
    op.add_column('raw_batches', sa.Column('mill_heat_no', sa.String(), nullable=True))
    op.alter_column('raw_batches', 'qty_received',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=18, scale=3),
               existing_nullable=False)
    op.alter_column('raw_batches', 'qty_used',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=18, scale=3),
               existing_nullable=False)
    op.create_index('ix_raw_batches_mat_recv', 'raw_batches', ['material_id', 'received_at'], unique=False)
    op.create_unique_constraint('uq_batch_material_supplier', 'raw_batches', ['material_id', 'batch_no', 'supplier_id'])
    op.create_foreign_key(None, 'raw_batches', 'suppliers', ['supplier_id'], ['id'])
    op.drop_column('raw_batches', 'supplier')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('raw_batches', sa.Column('supplier', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'raw_batches', type_='foreignkey')
    op.drop_constraint('uq_batch_material_supplier', 'raw_batches', type_='unique')
    op.drop_index('ix_raw_batches_mat_recv', table_name='raw_batches')
    op.alter_column('raw_batches', 'qty_used',
               existing_type=sa.Numeric(precision=18, scale=3),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('raw_batches', 'qty_received',
               existing_type=sa.Numeric(precision=18, scale=3),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.drop_column('raw_batches', 'mill_heat_no')
    op.drop_column('raw_batches', 'mill_name')
    op.drop_column('raw_batches', 'supplier_batch_no')
    op.drop_column('raw_batches', 'supplier_id')
    op.alter_column('purchase_orders', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('purchase_orders', 'po_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('ix_lmu_lot', table_name='lot_material_use')
    op.drop_index('ix_lmu_batch', table_name='lot_material_use')
    op.alter_column('lot_material_use', 'qty',
               existing_type=sa.Numeric(precision=18, scale=3),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('employees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('employees', 'emp_code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('customers', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('customers', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('process_steps',
    sa.Column('step_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('step_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('step_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], name=op.f('process_steps_product_id_fkey')),
    sa.PrimaryKeyConstraint('step_id', name=op.f('process_steps_pkey'))
    )
    op.create_index(op.f('ix_process_steps_step_id'), 'process_steps', ['step_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('products',
    sa.Column('product_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('product_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('in_stock', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('product_id', name=op.f('products_pkey'))
    )
    op.create_index(op.f('ix_products_product_id'), 'products', ['product_id'], unique=False)
    # ### end Alembic commands ###
