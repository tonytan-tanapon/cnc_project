"""add QA measurement & inspection tables

Revision ID: 9ba354c7673f
Revises: fbcb1ec076cd
Create Date: 2025-08-13 22:15:13.461897

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9ba354c7673f'
down_revision: Union[str, Sequence[str], None] = 'fbcb1ec076cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('measurement_devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('serial_no', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('calibration_due', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_measurement_devices_cal_due', 'measurement_devices', ['calibration_due'], unique=False)
    op.create_index(op.f('ix_measurement_devices_code'), 'measurement_devices', ['code'], unique=True)
    op.create_index('ix_measurement_devices_status', 'measurement_devices', ['status'], unique=False)
    op.create_index('ix_measurement_devices_type', 'measurement_devices', ['type'], unique=False)
    op.create_table('device_calibrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('calibrated_at', sa.Date(), nullable=False),
    sa.Column('due_at', sa.Date(), nullable=True),
    sa.Column('performed_by', sa.String(), nullable=True),
    sa.Column('result', sa.String(), nullable=True),
    sa.Column('certificate_file', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['measurement_devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_device_calibrations_device', 'device_calibrations', ['device_id', 'calibrated_at'], unique=False)
    op.create_table('inspection_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('traveler_step_id', sa.Integer(), nullable=False),
    sa.Column('inspector_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('overall_result', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['measurement_devices.id'], ),
    sa.ForeignKeyConstraint(['inspector_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['traveler_step_id'], ['shop_traveler_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_inspection_records_result', 'inspection_records', ['overall_result'], unique=False)
    op.create_index('ix_inspection_records_step', 'inspection_records', ['traveler_step_id'], unique=False)
    op.create_table('inspection_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('characteristic', sa.String(), nullable=False),
    sa.Column('nominal_value', sa.Numeric(precision=18, scale=4), nullable=True),
    sa.Column('tol_lower', sa.Numeric(precision=18, scale=4), nullable=True),
    sa.Column('tol_upper', sa.Numeric(precision=18, scale=4), nullable=True),
    sa.Column('measured_value', sa.Numeric(precision=18, scale=4), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('result', sa.String(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('attachment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['measurement_devices.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['inspection_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_inspection_items_record', 'inspection_items', ['record_id'], unique=False)
    op.create_index('ix_inspection_items_result', 'inspection_items', ['result'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_inspection_items_result', table_name='inspection_items')
    op.drop_index('ix_inspection_items_record', table_name='inspection_items')
    op.drop_table('inspection_items')
    op.drop_index('ix_inspection_records_step', table_name='inspection_records')
    op.drop_index('ix_inspection_records_result', table_name='inspection_records')
    op.drop_table('inspection_records')
    op.drop_index('ix_device_calibrations_device', table_name='device_calibrations')
    op.drop_table('device_calibrations')
    op.drop_index('ix_measurement_devices_type', table_name='measurement_devices')
    op.drop_index('ix_measurement_devices_status', table_name='measurement_devices')
    op.drop_index(op.f('ix_measurement_devices_code'), table_name='measurement_devices')
    op.drop_index('ix_measurement_devices_cal_due', table_name='measurement_devices')
    op.drop_table('measurement_devices')
    # ### end Alembic commands ###
