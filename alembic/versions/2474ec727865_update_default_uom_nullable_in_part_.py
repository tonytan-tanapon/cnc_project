"""update default_uom nullable in part table 

Revision ID: 2474ec727865
Revises: c46d7818a73f
Create Date: 2025-10-03 13:47:07.914763

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2474ec727865'
down_revision: Union[str, Sequence[str], None] = 'c46d7818a73f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('break_entries', 'break_type',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('break_entries', 'is_paid',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('chemical_finishes', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('chemical_finishes_code_key'), 'chemical_finishes', type_='unique')
    op.alter_column('customer_invoices', 'invoice_date',
               existing_type=sa.DATE(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('customer_invoices', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('customer_invoices_invoice_no_key'), 'customer_invoices', type_='unique')
    op.alter_column('customer_returns', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('customer_returns_rma_no_key'), 'customer_returns', type_='unique')
    op.drop_constraint(op.f('customers_code_key'), 'customers', type_='unique')
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.alter_column('employees', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('employees_emp_code_key'), 'employees', type_='unique')
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.alter_column('holidays', 'is_paid',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('holidays', 'pay_multiplier',
               existing_type=sa.NUMERIC(precision=3, scale=2),
               server_default=None,
               existing_nullable=False)
    op.create_index(op.f('ix_inspection_items_record_id'), 'inspection_items', ['record_id'], unique=False)
    op.alter_column('inspection_records', 'is_fair',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('inspection_records_part_revision_id_fkey'), 'inspection_records', type_='foreignkey')
    op.create_foreign_key(None, 'inspection_records', 'part_revisions', ['part_revision_id'], ['id'], ondelete='SET NULL')
    op.alter_column('machine_schedule', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('machines', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('machines_code_key'), 'machines', type_='unique')
    op.alter_column('material_pos', 'order_date',
               existing_type=sa.DATE(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('material_pos', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('material_pos_po_number_key'), 'material_pos', type_='unique')
    op.alter_column('measurement_devices', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('measurement_devices_code_key'), 'measurement_devices', type_='unique')
    op.alter_column('mfg_processes', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('mfg_processes_code_key'), 'mfg_processes', type_='unique')
    op.alter_column('part_revisions', 'is_current',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('parts', 'default_uom',
               existing_type=sa.VARCHAR(),
               server_default=None,
               nullable=True)
    op.alter_column('parts', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               nullable=True)
    op.drop_constraint(op.f('parts_part_no_key'), 'parts', type_='unique')
    op.alter_column('pay_periods', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('pay_rates', 'ot_multiplier',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               server_default=None,
               existing_nullable=False)
    op.alter_column('pay_rates', 'dt_multiplier',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('permissions_code_key'), 'permissions', type_='unique')
    op.create_index(op.f('ix_po_lines_po_id'), 'po_lines', ['po_id'], unique=False)
    op.alter_column('production_lots', 'planned_qty',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('production_lots', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('production_lots', 'fair_required',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('production_lots_lot_no_key'), 'production_lots', type_='unique')
    op.create_index(op.f('ix_production_lots_lot_no'), 'production_lots', ['lot_no'], unique=True)
    op.drop_constraint(op.f('purchase_orders_po_number_key'), 'purchase_orders', type_='unique')
    op.create_index(op.f('ix_purchase_orders_id'), 'purchase_orders', ['id'], unique=False)
    op.alter_column('raw_batches', 'qty_received',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('raw_materials', 'uom',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('raw_materials_code_key'), 'raw_materials', type_='unique')
    op.drop_constraint(op.f('roles_code_key'), 'roles', type_='unique')
    op.alter_column('shop_traveler_steps', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qa_required',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qty_receive',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qty_accept',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qty_reject',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.create_index(op.f('ix_shop_traveler_steps_machine_id'), 'shop_traveler_steps', ['machine_id'], unique=False)
    op.create_index(op.f('ix_shop_traveler_steps_operator_id'), 'shop_traveler_steps', ['operator_id'], unique=False)
    op.alter_column('shop_travelers', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('shop_travelers_traveler_no_key'), 'shop_travelers', type_='unique')
    op.alter_column('subcon_order_lines', 'qty_planned',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_orders', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_receipt_items', 'qty_received',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_receipt_items', 'qty_rejected',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_receipt_items', 'scrap_qty',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_receipts', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_shipment_items', 'qty',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subcon_shipments', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('suppliers_code_key'), 'suppliers', type_='unique')
    op.alter_column('time_entries', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('time_leaves', 'is_paid',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('time_leaves', 'status',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_employee_id_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_employee_id_key'), 'users', ['employee_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('time_leaves', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'approved'::character varying"),
               existing_nullable=False)
    op.alter_column('time_leaves', 'is_paid',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('time_entries', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'open'::character varying"),
               existing_nullable=False)
    op.create_unique_constraint(op.f('suppliers_code_key'), 'suppliers', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('subcon_shipments', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'shipped'::character varying"),
               existing_nullable=False)
    op.alter_column('subcon_shipment_items', 'qty',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('subcon_receipts', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'received'::character varying"),
               existing_nullable=False)
    op.alter_column('subcon_receipt_items', 'scrap_qty',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('subcon_receipt_items', 'qty_rejected',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('subcon_receipt_items', 'qty_received',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('subcon_orders', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'open'::character varying"),
               existing_nullable=False)
    op.alter_column('subcon_order_lines', 'qty_planned',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.create_unique_constraint(op.f('shop_travelers_traveler_no_key'), 'shop_travelers', ['traveler_no'], postgresql_nulls_not_distinct=False)
    op.alter_column('shop_travelers', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'open'::character varying"),
               existing_nullable=False)
    op.drop_index(op.f('ix_shop_traveler_steps_operator_id'), table_name='shop_traveler_steps')
    op.drop_index(op.f('ix_shop_traveler_steps_machine_id'), table_name='shop_traveler_steps')
    op.alter_column('shop_traveler_steps', 'qty_reject',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qty_accept',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qty_receive',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'qa_required',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('shop_traveler_steps', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'pending'::character varying"),
               existing_nullable=False)
    op.create_unique_constraint(op.f('roles_code_key'), 'roles', ['code'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('raw_materials_code_key'), 'raw_materials', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('raw_materials', 'uom',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'kg'::character varying"),
               existing_nullable=False)
    op.alter_column('raw_batches', 'qty_received',
               existing_type=sa.NUMERIC(precision=18, scale=3),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.drop_index(op.f('ix_purchase_orders_id'), table_name='purchase_orders')
    op.create_unique_constraint(op.f('purchase_orders_po_number_key'), 'purchase_orders', ['po_number'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_production_lots_lot_no'), table_name='production_lots')
    op.create_unique_constraint(op.f('production_lots_lot_no_key'), 'production_lots', ['lot_no'], postgresql_nulls_not_distinct=False)
    op.alter_column('production_lots', 'fair_required',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('production_lots', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'in_process'::character varying"),
               existing_nullable=False)
    op.alter_column('production_lots', 'planned_qty',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.drop_index(op.f('ix_po_lines_po_id'), table_name='po_lines')
    op.create_unique_constraint(op.f('permissions_code_key'), 'permissions', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('pay_rates', 'dt_multiplier',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               server_default=sa.text('2.0'),
               existing_nullable=False)
    op.alter_column('pay_rates', 'ot_multiplier',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               server_default=sa.text('1.5'),
               existing_nullable=False)
    op.alter_column('pay_periods', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'open'::character varying"),
               existing_nullable=False)
    op.create_unique_constraint(op.f('parts_part_no_key'), 'parts', ['part_no'], postgresql_nulls_not_distinct=False)
    op.alter_column('parts', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'active'::character varying"),
               nullable=False)
    op.alter_column('parts', 'default_uom',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'ea'::character varying"),
               nullable=False)
    op.alter_column('part_revisions', 'is_current',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.create_unique_constraint(op.f('mfg_processes_code_key'), 'mfg_processes', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('mfg_processes', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.create_unique_constraint(op.f('measurement_devices_code_key'), 'measurement_devices', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('measurement_devices', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'available'::character varying"),
               existing_nullable=False)
    op.create_unique_constraint(op.f('material_pos_po_number_key'), 'material_pos', ['po_number'], postgresql_nulls_not_distinct=False)
    op.alter_column('material_pos', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'open'::character varying"),
               existing_nullable=False)
    op.alter_column('material_pos', 'order_date',
               existing_type=sa.DATE(),
               server_default=sa.text('CURRENT_DATE'),
               existing_nullable=False)
    op.create_unique_constraint(op.f('machines_code_key'), 'machines', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('machines', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'available'::character varying"),
               existing_nullable=False)
    op.alter_column('machine_schedule', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'scheduled'::character varying"),
               existing_nullable=False)
    op.drop_constraint(None, 'inspection_records', type_='foreignkey')
    op.create_foreign_key(op.f('inspection_records_part_revision_id_fkey'), 'inspection_records', 'part_revisions', ['part_revision_id'], ['id'])
    op.alter_column('inspection_records', 'is_fair',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.drop_index(op.f('ix_inspection_items_record_id'), table_name='inspection_items')
    op.alter_column('holidays', 'pay_multiplier',
               existing_type=sa.NUMERIC(precision=3, scale=2),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('holidays', 'is_paid',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.create_unique_constraint(op.f('employees_emp_code_key'), 'employees', ['emp_code'], postgresql_nulls_not_distinct=False)
    op.alter_column('employees', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'active'::character varying"),
               existing_nullable=False)
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.create_unique_constraint(op.f('customers_code_key'), 'customers', ['code'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('customer_returns_rma_no_key'), 'customer_returns', ['rma_no'], postgresql_nulls_not_distinct=False)
    op.alter_column('customer_returns', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'received'::character varying"),
               existing_nullable=False)
    op.create_unique_constraint(op.f('customer_invoices_invoice_no_key'), 'customer_invoices', ['invoice_no'], postgresql_nulls_not_distinct=False)
    op.alter_column('customer_invoices', 'status',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'open'::character varying"),
               existing_nullable=False)
    op.alter_column('customer_invoices', 'invoice_date',
               existing_type=sa.DATE(),
               server_default=sa.text('CURRENT_DATE'),
               existing_nullable=False)
    op.create_unique_constraint(op.f('chemical_finishes_code_key'), 'chemical_finishes', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('chemical_finishes', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('break_entries', 'is_paid',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('break_entries', 'break_type',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'lunch'::character varying"),
               existing_nullable=False)
    # ### end Alembic commands ###
